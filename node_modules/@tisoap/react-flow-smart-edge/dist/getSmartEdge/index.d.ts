import type { PathFindingFunction, SVGDrawFunction } from '../functions';
import type { Node, EdgeProps } from 'react-flow-renderer';
export declare type EdgeParams = Pick<EdgeProps, 'sourceX' | 'sourceY' | 'targetX' | 'targetY' | 'sourcePosition' | 'targetPosition'>;
export declare type GetSmartEdgeOptions = {
    gridRatio?: number;
    nodePadding?: number;
    drawEdge?: SVGDrawFunction;
    generatePath?: PathFindingFunction;
};
export declare type GetSmartEdgeParams<NodeDataType = unknown> = EdgeParams & {
    options?: GetSmartEdgeOptions;
    nodes: Node<NodeDataType>[];
};
export declare type GetSmartEdgeReturn = {
    svgPathString: string;
    edgeCenterX: number;
    edgeCenterY: number;
};
export declare const getSmartEdge: <NodeDataType = unknown>({ options, nodes, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition }: GetSmartEdgeParams<NodeDataType>) => GetSmartEdgeReturn | null;
export declare type GetSmartEdgeFunction = typeof getSmartEdge;
